


//- @pugdoc
  name: option
  description: A mixin to create an option for use in a select. This mixin must be used within the block of a {@link select} mixin. The K-scaffold will associate the option's values and trigger with the select parent. See the {@link select} for example usage.
  arguments:
    - {object} optionObj - The object describing the option element
    - {block} block - The contents of the option element
  attributes:
mixin option(obj)
  - obj.class = obj.class ? replaceProblems(obj.class) : undefined;
  - const triggerObj = {...obj,name:selectName,title:selectTitle,type:'select'};
  - const elementObj = makeElementObj(obj);
  - storeTrigger(triggerObj);
  option&attributes(elementObj)
    block
//-End Mixin




//- @pugdoc
  name: select
  description: A mixin to create a select element. Uses K-scaffold global variables to control how {@link option} mixins within the select's block behave.
  arguments:
    - {object} inputObj - The object describing the select
    - {block} block - The content within the select
  attributes:
  example: |
    include _htmlelements.pug
    +select({name:'my select'})
      +option({value:'a value','data-i18n':'a translation key',trigger:{affects:['some_attribute']}})
      +option({value:'value 2','data-i18n':'translation 2'})
      +option({value:'value 3'})
        |Some Text we include via the option's block
mixin select(obj)
  - obj.class = obj.class ? replaceProblems(obj.class) : undefined;
  - obj.name = replaceSpaces(obj.name);
  - obj.title = obj.title || attrTitle(obj.name);
  - obj.name = `attr_${obj.name}`;
  - selectName = obj.name;
  - selectTitle = obj.title;
  - addFieldToFieldsetObj(obj);
  select&attributes(obj)
    if block
      block
    else
      +option({value:'empty select, PEBKAC',selected:true})
//-End Mixin


